%YAML:1.0

#common parameters
imu_topic: "/imu/imu/data"
image_topic: "/left/downsample_raw"
output_path: "/home/rvl/catkin_ws/src/VINS-Mono/output"

#camera calibration 
model_type: PINHOLE
camera_name: camera

image_width: 612
image_height: 512

distortion_parameters:
   k1: -0.1762088977915627
   k2: 0.08539238648206524
   p1: 0.0002462342497331716
   p2: 0.00032291209479618914 
projection_parameters:
   fx: 448.29308777949757
   fy: 447.9978999410104
   cx: 301.68106404856
   cy: 242.76373276701213

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.


#T_cam_imu = T_BS_cam⁻¹ * T_BS_imu
#T_BS_cam 是 camera 的外參（從 camera 到 body）
#T_BS_imu 是 imu 的外參（從 imu 到 body）

#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d

   data: [ 0.00555786, 0.99994638, 0.00873792,
          0.99997899, -0.00552847, -0.00338442,
         -0.00333593, 0.00875656, -0.99995609]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   # data: [5.9331219387163806e-02, -4.0806062874000411e-02,
   #     -2.8318324924940151e-02]

   data: [ -3.71080393e-05, -7.37911049e-04, 1.10377999e-04 ]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.00912504793531317          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.0019425812268625707         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.0001305951086175891         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 3.9570963198826466e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
fast_relocalization: 1             # useful in real-time and large project
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/rvl/catkin_ws/src/VINS-Mono/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.000                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 1                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

#setting IMU
use_imu: true
